cases
path.txt
README.txt
requirements.txt
setup.sh
test.py
valgr_out.txt
cases
path.txt
README.txt
requirements.txt
setup.sh
test.py
valgr_out.txt
cases
path.txt
README.txt
requirements.txt
setup.sh
test.py
valgr_out.txt
==11631== Memcheck, a memory error detector
==11631== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11631== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==11631== Command: ls
==11631== 
==11631== 
==11631== HEAP SUMMARY:
==11631==     in use at exit: 20,858 bytes in 14 blocks
==11631==   total heap usage: 51 allocs, 37 frees, 60,109 bytes allocated
==11631== 
==11631== LEAK SUMMARY:
==11631==    definitely lost: 0 bytes in 0 blocks
==11631==    indirectly lost: 0 bytes in 0 blocks
==11631==      possibly lost: 0 bytes in 0 blocks
==11631==    still reachable: 20,858 bytes in 14 blocks
==11631==         suppressed: 0 bytes in 0 blocks
==11631== Rerun with --leak-check=full to see details of leaked memory
==11631== 
==11631== For counts of detected and suppressed errors, rerun with: -v
==11631== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==11632== Memcheck, a memory error detector
==11632== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11632== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==11632== Command: ls
==11632== 
==11632== 
==11632== HEAP SUMMARY:
==11632==     in use at exit: 20,858 bytes in 14 blocks
==11632==   total heap usage: 51 allocs, 37 frees, 60,109 bytes allocated
==11632== 
==11632== LEAK SUMMARY:
==11632==    definitely lost: 0 bytes in 0 blocks
==11632==    indirectly lost: 0 bytes in 0 blocks
==11632==      possibly lost: 0 bytes in 0 blocks
==11632==    still reachable: 20,858 bytes in 14 blocks
==11632==         suppressed: 0 bytes in 0 blocks
==11632== Rerun with --leak-check=full to see details of leaked memory
==11632== 
==11632== For counts of detected and suppressed errors, rerun with: -v
==11632== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
